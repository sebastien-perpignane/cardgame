name: Java compile with Maven

on:
  push:
    branches: [ "!master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Tente le
        run: echo ${{ github.ref_name }} >> $GITHUB_REF
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Force all maven dependencies download
        run: mvn -B dependency:go-offline

      - name: Build with Maven
        run: mvn -B compile --file pom.xml -Dmaven.test.skip=true

      - name: Unit tests
        run: mvn -B test --file pom.xml

      - name: Integration test
        run: mvn -B failsafe:integration-test --file pom.xml

      - name: Package
        run: mvn -B package --file pom.xml -DskipTests=true

#      - name: build tar container
#        id: build_tar_container
#        shell: bash
#        run: |
#          mvn -B jib:buildTar --file pom.xml
#          export result=$?
#          echo "mvn_result=result" >> $GITHUB_OUTPUT
#          exit 0

      - name: Show structure of current dir
        if: success() || failure()
        run: |
          echo "mvn result $ {{ steps.build_tar_container.outputs.mvn_result}}"
          pwd
          ls -R

      - name: Upload build result artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-result
          retention-days: 1
          path: |
            ./
            !./src/
            !./.*
            

  publish-on-harbor:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        harbor-target: [ "qvi", "tls", "ams" ]

    steps:
      - name: Get artifacts from build
        uses: actions/download-artifact@v3
        with:
          name: build-result

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: build tar container for ${{ matrix.harbor-target }}
        id: build_tar_container
        shell: bash
        run: |
          echo "Publish on ${{ matrix.harbor-target }}"
          mvn -B jib:buildTar --file pom.xml -Dimage=cardgame-"${{ matrix.harbor-target }}".tar